/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * An object denoting the position and size of the crop
 */
public class OASQRCodeLogoCrop {
    /**
     * The x coordinate used to position the crop
     * @return x
     */
    public Integer x { get; set; }

    /**
     * The y coordinate used to position the crop
     * @return y
     */
    public Integer y { get; set; }

    /**
     * The width of the crop. Will instead be used as the radius for a circular crop.
     * @return w
     */
    public Integer w { get; set; }

    /**
     * The height of the crop. Will be completely disregarded for a circular crop.
     * @return h
     */
    public Integer h { get; set; }

    public static OASQRCodeLogoCrop getExample() {
        OASQRCodeLogoCrop qrCodeLogoCrop = new OASQRCodeLogoCrop();
          qrCodeLogoCrop.x = 0;
          qrCodeLogoCrop.y = 0;
          qrCodeLogoCrop.w = 0;
          qrCodeLogoCrop.h = 0;
        return qrCodeLogoCrop;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASQRCodeLogoCrop) {           
            OASQRCodeLogoCrop qrCodeLogoCrop = (OASQRCodeLogoCrop) obj;
            return this.x == qrCodeLogoCrop.x
                && this.y == qrCodeLogoCrop.y
                && this.w == qrCodeLogoCrop.w
                && this.h == qrCodeLogoCrop.h;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (x == null ? 0 : System.hashCode(x));
        hashCode = (17 * hashCode) + (y == null ? 0 : System.hashCode(y));
        hashCode = (17 * hashCode) + (w == null ? 0 : System.hashCode(w));
        hashCode = (17 * hashCode) + (h == null ? 0 : System.hashCode(h));
        return hashCode;
    }
}