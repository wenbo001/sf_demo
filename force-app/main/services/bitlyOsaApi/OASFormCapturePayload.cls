/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASFormCapturePayload
 */
public class OASFormCapturePayload implements OAS.MappedProperties {
    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get version
     * @return version
     */
    public String version { get; set; }

    /**
     * Get submitText
     * @return submitText
     */
    public String submitText { get; set; }

    /**
     * Get skipText
     * @return skipText
     */
    public String skipText { get; set; }

    /**
     * Get login
     * @return login
     */
    public String login { get; set; }

    /**
     * Get orgGuid
     * @return orgGuid
     */
    public String orgGuid { get; set; }

    /**
     * Get groupGuid
     * @return groupGuid
     */
    public String groupGuid { get; set; }

    /**
     * Get responseStatus
     * @return responseStatus
     */
    public String responseStatus { get; set; }

    /**
     * Get pages
     * @return pages
     */
    public List<OASFormPage> pages { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'submit_text' => 'submitText',
        'skip_text' => 'skipText',
        'org_guid' => 'orgGuid',
        'group_guid' => 'groupGuid',
        'response_status' => 'responseStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }


    public OASFormCapturePayload() {
        pages = new List<OASFormPage>();
    }

    public static OASFormCapturePayload getExample() {
        OASFormCapturePayload formCapturePayload = new OASFormCapturePayload();
          formCapturePayload.name = '';
          formCapturePayload.version = '';
          formCapturePayload.submitText = '';
          formCapturePayload.skipText = '';
          formCapturePayload.login = '';
          formCapturePayload.orgGuid = '';
          formCapturePayload.groupGuid = '';
          formCapturePayload.responseStatus = '';
          formCapturePayload.pages = new List<OASFormPage>{OASFormPage.getExample()};
        return formCapturePayload;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFormCapturePayload) {           
            OASFormCapturePayload formCapturePayload = (OASFormCapturePayload) obj;
            return this.name == formCapturePayload.name
                && this.version == formCapturePayload.version
                && this.submitText == formCapturePayload.submitText
                && this.skipText == formCapturePayload.skipText
                && this.login == formCapturePayload.login
                && this.orgGuid == formCapturePayload.orgGuid
                && this.groupGuid == formCapturePayload.groupGuid
                && this.responseStatus == formCapturePayload.responseStatus
                && this.pages == formCapturePayload.pages;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (version == null ? 0 : System.hashCode(version));
        hashCode = (17 * hashCode) + (submitText == null ? 0 : System.hashCode(submitText));
        hashCode = (17 * hashCode) + (skipText == null ? 0 : System.hashCode(skipText));
        hashCode = (17 * hashCode) + (login == null ? 0 : System.hashCode(login));
        hashCode = (17 * hashCode) + (orgGuid == null ? 0 : System.hashCode(orgGuid));
        hashCode = (17 * hashCode) + (groupGuid == null ? 0 : System.hashCode(groupGuid));
        hashCode = (17 * hashCode) + (responseStatus == null ? 0 : System.hashCode(responseStatus));
        hashCode = (17 * hashCode) + (pages == null ? 0 : System.hashCode(pages));
        return hashCode;
    }
}