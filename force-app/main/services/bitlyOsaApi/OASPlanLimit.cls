/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASPlanLimit
 */
public class OASPlanLimit implements OAS.MappedProperties {
    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Get r_limit
     * @return r_limit
     */
    public Integer r_limit { get; set; }

    /**
     * Get count
     * @return count
     */
    public Integer count { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'limit' => 'r_limit'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }

    public static OASPlanLimit getExample() {
        OASPlanLimit planLimit = new OASPlanLimit();
          planLimit.name = '';
          planLimit.description = '';
          planLimit.r_limit = 0;
          planLimit.count = 0;
        return planLimit;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPlanLimit) {           
            OASPlanLimit planLimit = (OASPlanLimit) obj;
            return this.name == planLimit.name
                && this.description == planLimit.description
                && this.r_limit == planLimit.r_limit
                && this.count == planLimit.count;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (r_limit == null ? 0 : System.hashCode(r_limit));
        hashCode = (17 * hashCode) + (count == null ? 0 : System.hashCode(count));
        return hashCode;
    }
}