/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASImageUpload
 */
public class OASImageUpload implements OAS.MappedProperties {
    /**
     * Get image
     * @return image
     */
    public Blob image { get; set; }

    /**
     * Get groupGuid
     * @return groupGuid
     */
    public String groupGuid { get; set; }

    /**
     * Gets or Sets use
     */
    public enum UseEnum {
        NUL,
        DEFAULT_QR_CODE_IMAGE,
        LINK_IN_BIO
    }

    /**
     * Get use
     * @return use
     */
    public UseEnum use { get; set; }

    /**
     * Get crop
     * @return crop
     */
    public String crop { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'group_guid' => 'groupGuid'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }

    public static OASImageUpload getExample() {
        OASImageUpload imageUpload = new OASImageUpload();
          imageUpload.image = EncodingUtil.base64Decode('VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2cu');
          imageUpload.groupGuid = '';
          imageUpload.use = UseEnum.NUL;
          imageUpload.crop = '{"Min": {"X": 0, "Y": 0}, "Max": {"X": 1, "Y": 1}}';
        return imageUpload;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASImageUpload) {           
            OASImageUpload imageUpload = (OASImageUpload) obj;
            return this.image == imageUpload.image
                && this.groupGuid == imageUpload.groupGuid
                && this.use == imageUpload.use
                && this.crop == imageUpload.crop;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (image == null ? 0 : System.hashCode(image));
        hashCode = (17 * hashCode) + (groupGuid == null ? 0 : System.hashCode(groupGuid));
        hashCode = (17 * hashCode) + (use == null ? 0 : System.hashCode(use));
        hashCode = (17 * hashCode) + (crop == null ? 0 : System.hashCode(crop));
        return hashCode;
    }
}