/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASUserPreferenceBody
 */
public class OASUserPreferenceBody implements OAS.MappedProperties {
    /**
     * Get preference
     * @return preference
     */
    public String preference { get; set; }

    /**
     * Get value
     * @return value
     */
    public String value { get; set; }

    /**
     * Get isActive
     * @return isActive
     */
    public Boolean isActive { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_active' => 'isActive'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }

    public static OASUserPreferenceBody getExample() {
        OASUserPreferenceBody userPreferenceBody = new OASUserPreferenceBody();
          userPreferenceBody.preference = '';
          userPreferenceBody.value = '';
          userPreferenceBody.isActive = true;
        return userPreferenceBody;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUserPreferenceBody) {           
            OASUserPreferenceBody userPreferenceBody = (OASUserPreferenceBody) obj;
            return this.preference == userPreferenceBody.preference
                && this.value == userPreferenceBody.value
                && this.isActive == userPreferenceBody.isActive;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (preference == null ? 0 : System.hashCode(preference));
        hashCode = (17 * hashCode) + (value == null ? 0 : System.hashCode(value));
        hashCode = (17 * hashCode) + (isActive == null ? 0 : System.hashCode(isActive));
        return hashCode;
    }
}