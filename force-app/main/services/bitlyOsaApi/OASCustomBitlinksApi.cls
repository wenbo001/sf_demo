/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASCustomBitlinksApi {
    OASClient client;

    public OASCustomBitlinksApi(OASClient client) {
        this.client = client;
    }

    public OASCustomBitlinksApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Add Custom Bitlink
     * Add a keyword (or &quot;custom back-half&quot;) to a Bitlink with a Custom Domain (domains must match). This endpoint can also be used for initial redirects to a link.
     * @param oaSAddCustomBitlink  (required)
     * @return OASCustomBitlink
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCustomBitlink addCustomBitlink(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSAddCustomBitlink'), 'oaSAddCustomBitlink');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCustomBitlink) client.invoke(
            'POST', '/custom_bitlinks',
            (OASAddCustomBitlink) params.get('oaSAddCustomBitlink'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            OASCustomBitlink.class
        );
    }
    /**
     * Get Clicks for a Custom Bitlink\&#39;s Entire History
     * Returns the click counts for the specified link. This returns an array with clicks based on a date.
     * @param customBitlink A Custom Bitlink made of the domain and keyword (required)
     * @param unit A unit of time (required)
     * @param units An integer representing the time units to query data for. pass -1 to return all units of time (required)
     * @param unitReference An ISO-8601 timestamp, indicating the most recent time for which to pull metrics. Will default to current time. Timestamp values should be url encoded (i.e. replace \&#39;+\&#39; with \&#39;%2B\&#39; and \&#39;:\&#39; with \&#39;%3A\&#39;; 2022-02-02T15:53:02+0000 becomes 2022-02-02T15%3A53%3A02%2B0000) (optional)
     * @return OASClicks
     * @throws OAS.ApiException if fails to make API call
     */
    public OASClicks getClicksForCustomBitlink(Map<String, Object> params) {
        client.assertNotNull(params.get('customBitlink'), 'customBitlink');
        client.assertNotNull(params.get('unit'), 'unit');
        client.assertNotNull(params.get('units'), 'units');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('unit', (OASTimeUnit) params.get('unit')));
        query.addAll(client.makeParam('units', (Integer) params.get('units')));
        query.addAll(client.makeParam('unit_reference', (String) params.get('unitReference')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASClicks) client.invoke(
            'GET', '/custom_bitlinks/{custom_bitlink}/clicks', '',
            query, form,
            new Map<String, Object>{
                'custom_bitlink' => (String) params.get('customBitlink')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'bearerAuth' },
            OASClicks.class
        );
    }
    /**
     * Retrieve Custom Bitlink
     * Returns the details and history of the specified link.
     * @param customBitlink A Custom Bitlink made of the domain and keyword (required)
     * @return OASCustomBitlink
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCustomBitlink getCustomBitlink(Map<String, Object> params) {
        client.assertNotNull(params.get('customBitlink'), 'customBitlink');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCustomBitlink) client.invoke(
            'GET', '/custom_bitlinks/{custom_bitlink}', '',
            query, form,
            new Map<String, Object>{
                'custom_bitlink' => (String) params.get('customBitlink')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'bearerAuth' },
            OASCustomBitlink.class
        );
    }
    /**
     * Get Metrics for a Custom Bitlink by Destination
     * Returns click metrics for the specified link by its historical destinations.
     * @param customBitlink A Custom Bitlink made of the domain and keyword (required)
     * @param unit A unit of time (required)
     * @param units An integer representing the time units to query data for. pass -1 to return all units of time (required)
     * @param unitReference An ISO-8601 timestamp, indicating the most recent time for which to pull metrics. Will default to current time. Timestamp values should be url encoded (i.e. replace \&#39;+\&#39; with \&#39;%2B\&#39; and \&#39;:\&#39; with \&#39;%3A\&#39;; 2022-02-02T15:53:02+0000 becomes 2022-02-02T15%3A53%3A02%2B0000) (optional)
     * @return OASClickMetrics
     * @throws OAS.ApiException if fails to make API call
     */
    public OASClickMetrics getCustomBitlinkMetricsByDestination(Map<String, Object> params) {
        client.assertNotNull(params.get('customBitlink'), 'customBitlink');
        client.assertNotNull(params.get('unit'), 'unit');
        client.assertNotNull(params.get('units'), 'units');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('unit', (OASTimeUnit) params.get('unit')));
        query.addAll(client.makeParam('units', (Integer) params.get('units')));
        query.addAll(client.makeParam('unit_reference', (String) params.get('unitReference')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASClickMetrics) client.invoke(
            'GET', '/custom_bitlinks/{custom_bitlink}/clicks_by_destination', '',
            query, form,
            new Map<String, Object>{
                'custom_bitlink' => (String) params.get('customBitlink')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'bearerAuth' },
            OASClickMetrics.class
        );
    }
    /**
     * Update Custom Bitlink
     * Move a keyword (or custom back-half) to a different Bitlink (domains must match).
     * @param customBitlink A Custom Bitlink made of the domain and keyword (required)
     * @param oaSUpdateCustomBitlink  (required)
     * @return OASCustomBitlink
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCustomBitlink updateCustomBitlink(Map<String, Object> params) {
        client.assertNotNull(params.get('customBitlink'), 'customBitlink');
        client.assertNotNull(params.get('oaSUpdateCustomBitlink'), 'oaSUpdateCustomBitlink');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCustomBitlink) client.invoke(
            'PATCH', '/custom_bitlinks/{custom_bitlink}',
            (OASUpdateCustomBitlink) params.get('oaSUpdateCustomBitlink'),
            query, form,
            new Map<String, Object>{
                'custom_bitlink' => (String) params.get('customBitlink')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            OASCustomBitlink.class
        );
    }
}