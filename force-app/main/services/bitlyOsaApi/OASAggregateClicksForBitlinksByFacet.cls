/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASAggregateClicksForBitlinksByFacet
 */
public class OASAggregateClicksForBitlinksByFacet implements OAS.MappedProperties {
    /**
     * Get unitReference
     * @return unitReference
     */
    public String unitReference { get; set; }

    /**
     * Get unit
     * @return unit
     */
    public String unit { get; set; }

    /**
     * Get units
     * @return units
     */
    public Double units { get; set; }

    /**
     * Get facet
     * @return facet
     */
    public String facet { get; set; }

    /**
     * Get totalsForTimePeriod
     * @return totalsForTimePeriod
     */
    public List<OASClicksByFacet> totalsForTimePeriod { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'unit_reference' => 'unitReference',
        'totals_for_time_period' => 'totalsForTimePeriod'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }

//    private static final Map<String, String> propertyMappings = new Map<String, String>{
//        'unit_reference' => 'unitReference',
//        'totals_for_time_period' => 'totalsForTimePeriod'
//    };

    //public Map<String, String> getPropertyMappings() {
        //return propertyMappings;
   //}

    public OASAggregateClicksForBitlinksByFacet() {
        totalsForTimePeriod = new List<OASClicksByFacet>();
    }

    public static OASAggregateClicksForBitlinksByFacet getExample() {
        OASAggregateClicksForBitlinksByFacet aggregateClicksForBitlinksByFacet = new OASAggregateClicksForBitlinksByFacet();
          aggregateClicksForBitlinksByFacet.unitReference = '';
          aggregateClicksForBitlinksByFacet.unit = '';
          aggregateClicksForBitlinksByFacet.units = 1.3579;
          aggregateClicksForBitlinksByFacet.facet = '';
          aggregateClicksForBitlinksByFacet.totalsForTimePeriod = new List<OASClicksByFacet>{OASClicksByFacet.getExample()};
        return aggregateClicksForBitlinksByFacet;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASAggregateClicksForBitlinksByFacet) {           
            OASAggregateClicksForBitlinksByFacet aggregateClicksForBitlinksByFacet = (OASAggregateClicksForBitlinksByFacet) obj;
            return this.unitReference == aggregateClicksForBitlinksByFacet.unitReference
                && this.unit == aggregateClicksForBitlinksByFacet.unit
                && this.units == aggregateClicksForBitlinksByFacet.units
                && this.facet == aggregateClicksForBitlinksByFacet.facet
                && this.totalsForTimePeriod == aggregateClicksForBitlinksByFacet.totalsForTimePeriod;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (unitReference == null ? 0 : System.hashCode(unitReference));
        hashCode = (17 * hashCode) + (unit == null ? 0 : System.hashCode(unit));
        hashCode = (17 * hashCode) + (units == null ? 0 : System.hashCode(units));
        hashCode = (17 * hashCode) + (facet == null ? 0 : System.hashCode(facet));
        hashCode = (17 * hashCode) + (totalsForTimePeriod == null ? 0 : System.hashCode(totalsForTimePeriod));
        return hashCode;
    }
}