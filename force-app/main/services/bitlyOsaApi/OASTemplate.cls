/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASTemplate
 */
public class OASTemplate implements OAS.MappedProperties {
    /**
     * Get templateGuid
     * @return templateGuid
     */
    public String templateGuid { get; set; }

    /**
     * Get content
     * @return content
     */
    public OASBitlySiteContent content { get; set; }

    /**
     * Get appearance
     * @return appearance
     */
    public OASBitlySiteAppearance appearance { get; set; }

    /**
     * Get blocks
     * @return blocks
     */
    public List<OASSiteBlock> blocks { get; set; }

    /**
     * Get status
     * @return status
     */
    public String status { get; set; }

    /**
     * Get category
     * @return category
     */
    public String category { get; set; }

    /**
     * Get created
     * @return created
     */
    public String created { get; set; }

    /**
     * Get modified
     * @return modified
     */
    public String modified { get; set; }

    /**
     * Get isActive
     * @return isActive
     */
    public Boolean isActive { get; set; }

    /**
     * Get isPaid
     * @return isPaid
     */
    public Boolean isPaid { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'template_guid' => 'templateGuid',
        'is_active' => 'isActive',
        'is_paid' => 'isPaid'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }



    public OASTemplate() {
        blocks = new List<OASSiteBlock>();
    }

    public static OASTemplate getExample() {
        OASTemplate template = new OASTemplate();
          template.templateGuid = 'T1234567890';
          template.content = OASBitlySiteContent.getExample();
          template.appearance = OASBitlySiteAppearance.getExample();
          template.blocks = new List<OASSiteBlock>{OASSiteBlock.getExample()};
          template.status = '';
          template.category = '';
          template.created = '';
          template.modified = '';
          template.isActive = true;
          template.isPaid = true;
        return template;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASTemplate) {           
            OASTemplate template = (OASTemplate) obj;
            return this.templateGuid == template.templateGuid
                && this.content == template.content
                && this.appearance == template.appearance
                && this.blocks == template.blocks
                && this.status == template.status
                && this.category == template.category
                && this.created == template.created
                && this.modified == template.modified
                && this.isActive == template.isActive
                && this.isPaid == template.isPaid;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (templateGuid == null ? 0 : System.hashCode(templateGuid));
        hashCode = (17 * hashCode) + (content == null ? 0 : System.hashCode(content));
        hashCode = (17 * hashCode) + (appearance == null ? 0 : System.hashCode(appearance));
        hashCode = (17 * hashCode) + (blocks == null ? 0 : System.hashCode(blocks));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (category == null ? 0 : System.hashCode(category));
        hashCode = (17 * hashCode) + (created == null ? 0 : System.hashCode(created));
        hashCode = (17 * hashCode) + (modified == null ? 0 : System.hashCode(modified));
        hashCode = (17 * hashCode) + (isActive == null ? 0 : System.hashCode(isActive));
        hashCode = (17 * hashCode) + (isPaid == null ? 0 : System.hashCode(isPaid));
        return hashCode;
    }
}