/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASLaunchpadImageUpload
 */
public class OASLaunchpadImageUpload {
    /**
     * Get image
     * @return image
     */
    public Blob image { get; set; }

    /**
     * Gets or Sets position
     */
    public enum PositionEnum {
        PROFILE,
        BACKGROUND,
        BANNER,
        OTHER
    }

    /**
     * Get position
     * @return position
     */
    public PositionEnum position { get; set; }

    /**
     * Get crop
     * @return crop
     */
    public String crop { get; set; }

    public static OASLaunchpadImageUpload getExample() {
        OASLaunchpadImageUpload launchpadImageUpload = new OASLaunchpadImageUpload();
          launchpadImageUpload.image = EncodingUtil.base64Decode('VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2cu');
          launchpadImageUpload.position = PositionEnum.PROFILE;
          launchpadImageUpload.crop = '{"Min": {"X": 0, "Y": 0}, "Max": {"X": 1, "Y": 1}}';
        return launchpadImageUpload;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASLaunchpadImageUpload) {           
            OASLaunchpadImageUpload launchpadImageUpload = (OASLaunchpadImageUpload) obj;
            return this.image == launchpadImageUpload.image
                && this.position == launchpadImageUpload.position
                && this.crop == launchpadImageUpload.crop;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (image == null ? 0 : System.hashCode(image));
        hashCode = (17 * hashCode) + (position == null ? 0 : System.hashCode(position));
        hashCode = (17 * hashCode) + (crop == null ? 0 : System.hashCode(crop));
        return hashCode;
    }
}