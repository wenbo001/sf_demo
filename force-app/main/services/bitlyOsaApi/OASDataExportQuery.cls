/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASDataExportQuery
 */
public class OASDataExportQuery implements OAS.MappedProperties {
    /**
     * Gets or Sets reportType
     */
    public enum ReportTypeEnum {
        LINKS_METRICS,
        GDPR_SAR,
        QR_CODES,
        ORG_USERS
    }

    /**
     * Get reportType
     * @return reportType
     */
    public ReportTypeEnum reportType { get; set; }

    /**
     * Get emails
     * @return emails
     */
    public List<String> emails { get; set; }

    /**
     * Get createdBefore
     * @return createdBefore
     */
    public Integer createdBefore { get; set; }

    /**
     * Get createdAfter
     * @return createdAfter
     */
    public Integer createdAfter { get; set; }

    /**
     * Get modifiedAfter
     * @return modifiedAfter
     */
    public Integer modifiedAfter { get; set; }

    /**
     * Get query
     * @return query
     */
    public String query { get; set; }

    /**
     * Get keyword
     * @return keyword
     */
    public String keyword { get; set; }

    /**
     * Get archived
     * @return archived
     */
    public String archived { get; set; }

    /**
     * Get linkDeeplinks
     * @return linkDeeplinks
     */
    public String linkDeeplinks { get; set; }

    /**
     * Get customBitlink
     * @return customBitlink
     */
    public String customBitlink { get; set; }

    /**
     * Get tags
     * @return tags
     */
    public List<String> tags { get; set; }

    /**
     * Get campaignIds
     * @return campaignIds
     */
    public List<String> campaignIds { get; set; }

    /**
     * Get unit
     * @return unit
     */
    public String unit { get; set; }

    /**
     * Get units
     * @return units
     */
    public Integer units { get; set; }

    /**
     * Get unitReference
     * @return unitReference
     */
    public Integer unitReference { get; set; }

    /**
     * Includes the maximum available history for the user in the report. Default is false.
     * @return includeMaxHistory
     */
    public Boolean includeMaxHistory { get; set; }

    /**
     * The minimum number of clicks a link must have in order to be included in the report during their max history. Default is 0 which means all links are included. For example, value of 100 means only links at least a 100 clicks during this time period (max history) will be included in the report.
     * @return maxHistoryMinimumCount
     */
    public Integer maxHistoryMinimumCount { get; set; }

    /**
     * Parameters for custom metrics column in the report. Each entry in the array will result in a new metrics column in the report.
     * @return metricsColumns
     */
    public List<OASMetricsColumn> metricsColumns { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'report_type' => 'reportType',
        'created_before' => 'createdBefore',
        'created_after' => 'createdAfter',
        'modified_after' => 'modifiedAfter',
        'link_deeplinks' => 'linkDeeplinks',
        'custom_bitlink' => 'customBitlink',
        'campaign_ids' => 'campaignIds',
        'unit_reference' => 'unitReference',
        'include_max_history' => 'includeMaxHistory',
        'max_history_minimum_count' => 'maxHistoryMinimumCount',
        'metrics_columns' => 'metricsColumns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }


    public OASDataExportQuery() {
        emails = new List<String>();
        tags = new List<String>();
        campaignIds = new List<String>();
        metricsColumns = new List<OASMetricsColumn>();
    }

    public static OASDataExportQuery getExample() {
        OASDataExportQuery dataExportQuery = new OASDataExportQuery();
          dataExportQuery.reportType = ReportTypeEnum.LINKS_METRICS;
          dataExportQuery.emails = new List<String>{''};
          dataExportQuery.createdBefore = 0;
          dataExportQuery.createdAfter = 0;
          dataExportQuery.modifiedAfter = 0;
          dataExportQuery.query = '';
          dataExportQuery.keyword = '';
          dataExportQuery.archived = '';
          dataExportQuery.linkDeeplinks = '';
          dataExportQuery.customBitlink = '';
          dataExportQuery.tags = new List<String>{''};
          dataExportQuery.campaignIds = new List<String>{''};
          dataExportQuery.unit = '';
          dataExportQuery.units = 0;
          dataExportQuery.unitReference = 0;
          dataExportQuery.includeMaxHistory = true;
          dataExportQuery.maxHistoryMinimumCount = 0;
          dataExportQuery.metricsColumns = new List<OASMetricsColumn>{OASMetricsColumn.getExample()};
        return dataExportQuery;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASDataExportQuery) {           
            OASDataExportQuery dataExportQuery = (OASDataExportQuery) obj;
            return this.reportType == dataExportQuery.reportType
                && this.emails == dataExportQuery.emails
                && this.createdBefore == dataExportQuery.createdBefore
                && this.createdAfter == dataExportQuery.createdAfter
                && this.modifiedAfter == dataExportQuery.modifiedAfter
                && this.query == dataExportQuery.query
                && this.keyword == dataExportQuery.keyword
                && this.archived == dataExportQuery.archived
                && this.linkDeeplinks == dataExportQuery.linkDeeplinks
                && this.customBitlink == dataExportQuery.customBitlink
                && this.tags == dataExportQuery.tags
                && this.campaignIds == dataExportQuery.campaignIds
                && this.unit == dataExportQuery.unit
                && this.units == dataExportQuery.units
                && this.unitReference == dataExportQuery.unitReference
                && this.includeMaxHistory == dataExportQuery.includeMaxHistory
                && this.maxHistoryMinimumCount == dataExportQuery.maxHistoryMinimumCount
                && this.metricsColumns == dataExportQuery.metricsColumns;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (reportType == null ? 0 : System.hashCode(reportType));
        hashCode = (17 * hashCode) + (emails == null ? 0 : System.hashCode(emails));
        hashCode = (17 * hashCode) + (createdBefore == null ? 0 : System.hashCode(createdBefore));
        hashCode = (17 * hashCode) + (createdAfter == null ? 0 : System.hashCode(createdAfter));
        hashCode = (17 * hashCode) + (modifiedAfter == null ? 0 : System.hashCode(modifiedAfter));
        hashCode = (17 * hashCode) + (query == null ? 0 : System.hashCode(query));
        hashCode = (17 * hashCode) + (keyword == null ? 0 : System.hashCode(keyword));
        hashCode = (17 * hashCode) + (archived == null ? 0 : System.hashCode(archived));
        hashCode = (17 * hashCode) + (linkDeeplinks == null ? 0 : System.hashCode(linkDeeplinks));
        hashCode = (17 * hashCode) + (customBitlink == null ? 0 : System.hashCode(customBitlink));
        hashCode = (17 * hashCode) + (tags == null ? 0 : System.hashCode(tags));
        hashCode = (17 * hashCode) + (campaignIds == null ? 0 : System.hashCode(campaignIds));
        hashCode = (17 * hashCode) + (unit == null ? 0 : System.hashCode(unit));
        hashCode = (17 * hashCode) + (units == null ? 0 : System.hashCode(units));
        hashCode = (17 * hashCode) + (unitReference == null ? 0 : System.hashCode(unitReference));
        hashCode = (17 * hashCode) + (includeMaxHistory == null ? 0 : System.hashCode(includeMaxHistory));
        hashCode = (17 * hashCode) + (maxHistoryMinimumCount == null ? 0 : System.hashCode(maxHistoryMinimumCount));
        hashCode = (17 * hashCode) + (metricsColumns == null ? 0 : System.hashCode(metricsColumns));
        return hashCode;
    }
}