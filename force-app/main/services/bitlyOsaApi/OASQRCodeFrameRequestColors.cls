/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * An object of named colors denoting which color should go to which area of the frame
 */
public class OASQRCodeFrameRequestColors {
    /**
     * The primary color of the frame in hex code format
     * @return primary
     */
    public String primary { get; set; }

    /**
     * The secondary color of the frame in hex code format
     * @return secondary
     */
    public String secondary { get; set; }

    /**
     * The background color of the frame in hex code format
     * @return background
     */
    public String background { get; set; }

    public static OASQRCodeFrameRequestColors getExample() {
        OASQRCodeFrameRequestColors qrCodeFrameRequestColors = new OASQRCodeFrameRequestColors();
          qrCodeFrameRequestColors.primary = '';
          qrCodeFrameRequestColors.secondary = '';
          qrCodeFrameRequestColors.background = '';
        return qrCodeFrameRequestColors;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASQRCodeFrameRequestColors) {           
            OASQRCodeFrameRequestColors qrCodeFrameRequestColors = (OASQRCodeFrameRequestColors) obj;
            return this.primary == qrCodeFrameRequestColors.primary
                && this.secondary == qrCodeFrameRequestColors.secondary
                && this.background == qrCodeFrameRequestColors.background;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (primary == null ? 0 : System.hashCode(primary));
        hashCode = (17 * hashCode) + (secondary == null ? 0 : System.hashCode(secondary));
        hashCode = (17 * hashCode) + (background == null ? 0 : System.hashCode(background));
        return hashCode;
    }
}