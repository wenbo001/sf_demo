/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASSiteBlockCommon
 */
public class OASSiteBlockCommon implements OAS.MappedProperties {
    /**
     * Get siteId
     * @return siteId
     */
    public String siteId { get; set; }

    /**
     * Get blockId
     * @return blockId
     */
    public String blockId { get; set; }

    /**
     * Get sortOrder
     * @return sortOrder
     */
    public Integer sortOrder { get; set; }

    /**
     * Get scheduleStart
     * @return scheduleStart
     */
    public String scheduleStart { get; set; }

    /**
     * Get scheduleEnd
     * @return scheduleEnd
     */
    public String scheduleEnd { get; set; }

    /**
     * Get isActive
     * @return isActive
     */
    public Boolean isActive { get; set; }

    /**
     * Get isPinned
     * @return isPinned
     */
    public Boolean isPinned { get; set; }

    /**
     * Get isSample
     * @return isSample
     */
    public Boolean isSample { get; set; }

    /**
     * Get type
     * @return type
     */
    public OASSiteBlockTypeEnum type { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'site_id' => 'siteId',
        'block_id' => 'blockId',
        'sort_order' => 'sortOrder',
        'schedule_start' => 'scheduleStart',
        'schedule_end' => 'scheduleEnd',
        'is_active' => 'isActive',
        'is_pinned' => 'isPinned',
        'is_sample' => 'isSample'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }


    public static OASSiteBlockCommon getExample() {
        OASSiteBlockCommon siteBlockCommon = new OASSiteBlockCommon();
          siteBlockCommon.siteId = 'M1234567890';
          siteBlockCommon.blockId = 'L1234567890';
          siteBlockCommon.sortOrder = 0;
          siteBlockCommon.scheduleStart = '';
          siteBlockCommon.scheduleEnd = '';
          siteBlockCommon.isActive = true;
          siteBlockCommon.isPinned = true;
          siteBlockCommon.isSample = true;
          siteBlockCommon.type = OASSiteBlockTypeEnum.BITLINK;
        return siteBlockCommon;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSiteBlockCommon) {           
            OASSiteBlockCommon siteBlockCommon = (OASSiteBlockCommon) obj;
            return this.siteId == siteBlockCommon.siteId
                && this.blockId == siteBlockCommon.blockId
                && this.sortOrder == siteBlockCommon.sortOrder
                && this.scheduleStart == siteBlockCommon.scheduleStart
                && this.scheduleEnd == siteBlockCommon.scheduleEnd
                && this.isActive == siteBlockCommon.isActive
                && this.isPinned == siteBlockCommon.isPinned
                && this.isSample == siteBlockCommon.isSample
                && this.type == siteBlockCommon.type;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (siteId == null ? 0 : System.hashCode(siteId));
        hashCode = (17 * hashCode) + (blockId == null ? 0 : System.hashCode(blockId));
        hashCode = (17 * hashCode) + (sortOrder == null ? 0 : System.hashCode(sortOrder));
        hashCode = (17 * hashCode) + (scheduleStart == null ? 0 : System.hashCode(scheduleStart));
        hashCode = (17 * hashCode) + (scheduleEnd == null ? 0 : System.hashCode(scheduleEnd));
        hashCode = (17 * hashCode) + (isActive == null ? 0 : System.hashCode(isActive));
        hashCode = (17 * hashCode) + (isPinned == null ? 0 : System.hashCode(isPinned));
        hashCode = (17 * hashCode) + (isSample == null ? 0 : System.hashCode(isSample));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        return hashCode;
    }
}