/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Request to create a QR code from a Url
 */
public class OASCreateQRCodeFromUrlRequest implements OAS.MappedProperties {
    /**
     * Get groupGuid
     * @return groupGuid
     */
    public String groupGuid { get; set; }

    /**
     * The destination URL the QR should point to. Always use long_url or bitlink, not both.
     * @return longUrl
     */
    public String longUrl { get; set; }

    /**
     * The bitlink the QR should point to. Always use long_url or bitlink, not both.
     * @return bitlink
     */
    public String bitlink { get; set; }

    /**
     * The file format to be returned after creation. Call GET /v4/qrcodes/{qrcode id} to get the QR code in a different format after creation.
     */
    public enum ResponseFormatEnum {
        PNG,
        SVG
    }

    /**
     * The file format to be returned after creation. Call GET /v4/qrcodes/{qrcode id} to get the QR code in a different format after creation.
     * @return responseFormat
     */
    public ResponseFormatEnum responseFormat { get; set; }

    /**
     * Get renderCustomizations
     * @return renderCustomizations
     */
    public OASQRCodeCustomizations renderCustomizations { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'group_guid' => 'groupGuid',
        'long_url' => 'longUrl',
        'response_format' => 'PNG',
        'render_customizations' => 'renderCustomizations'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }


    public OASCreateQRCodeFromUrlRequest() {
        responseFormat = ResponseFormatEnum.PNG;
    }

    public static OASCreateQRCodeFromUrlRequest getExample() {
        OASCreateQRCodeFromUrlRequest createQRCodeFromUrlRequest = new OASCreateQRCodeFromUrlRequest();
          createQRCodeFromUrlRequest.groupGuid = '';
          createQRCodeFromUrlRequest.longUrl = '';
          createQRCodeFromUrlRequest.bitlink = '';
          createQRCodeFromUrlRequest.responseFormat = ResponseFormatEnum.PNG;
          createQRCodeFromUrlRequest.renderCustomizations = OASQRCodeCustomizations.getExample();
        return createQRCodeFromUrlRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCreateQRCodeFromUrlRequest) {           
            OASCreateQRCodeFromUrlRequest createQRCodeFromUrlRequest = (OASCreateQRCodeFromUrlRequest) obj;
            return this.groupGuid == createQRCodeFromUrlRequest.groupGuid
                && this.longUrl == createQRCodeFromUrlRequest.longUrl
                && this.bitlink == createQRCodeFromUrlRequest.bitlink
                && this.responseFormat == createQRCodeFromUrlRequest.responseFormat
                && this.renderCustomizations == createQRCodeFromUrlRequest.renderCustomizations;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (groupGuid == null ? 0 : System.hashCode(groupGuid));
        hashCode = (17 * hashCode) + (longUrl == null ? 0 : System.hashCode(longUrl));
        hashCode = (17 * hashCode) + (bitlink == null ? 0 : System.hashCode(bitlink));
        hashCode = (17 * hashCode) + (responseFormat == null ? 0 : System.hashCode(responseFormat));
        hashCode = (17 * hashCode) + (renderCustomizations == null ? 0 : System.hashCode(renderCustomizations));
        return hashCode;
    }
}