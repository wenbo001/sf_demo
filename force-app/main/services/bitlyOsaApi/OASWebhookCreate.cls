/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASWebhookCreate
 */
public class OASWebhookCreate implements OAS.MappedProperties {
    /**
     * Get isActive
     * @return isActive
     */
    public Boolean isActive { get; set; }

    /**
     * Get organizationGuid
     * @return organizationGuid
     */
    public String organizationGuid { get; set; }

    /**
     * Get groupGuid
     * @return groupGuid
     */
    public String groupGuid { get; set; }

    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get event
     * @return event
     */
    public String event { get; set; }

    /**
     * Get url
     * @return url
     */
    public String url { get; set; }

    /**
     * Get oauthUrl
     * @return oauthUrl
     */
    public String oauthUrl { get; set; }

    /**
     * Get clientId
     * @return clientId
     */
    public String clientId { get; set; }

    /**
     * Get clientSecret
     * @return clientSecret
     */
    public String clientSecret { get; set; }

    /**
     * Get fetchTags
     * @return fetchTags
     */
    public Boolean fetchTags { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_active' => 'isActive',
        'organization_guid' => 'organizationGuid',
        'group_guid' => 'groupGuid',
        'oauth_url' => 'oauthUrl',
        'client_id' => 'clientId',
        'client_secret' => 'clientSecret',
        'fetch_tags' => 'fetchTags'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }



    public static OASWebhookCreate getExample() {
        OASWebhookCreate webhookCreate = new OASWebhookCreate();
          webhookCreate.isActive = true;
          webhookCreate.organizationGuid = '';
          webhookCreate.groupGuid = '';
          webhookCreate.name = '';
          webhookCreate.event = '';
          webhookCreate.url = '';
          webhookCreate.oauthUrl = '';
          webhookCreate.clientId = '';
          webhookCreate.clientSecret = '';
          webhookCreate.fetchTags = true;
        return webhookCreate;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASWebhookCreate) {           
            OASWebhookCreate webhookCreate = (OASWebhookCreate) obj;
            return this.isActive == webhookCreate.isActive
                && this.organizationGuid == webhookCreate.organizationGuid
                && this.groupGuid == webhookCreate.groupGuid
                && this.name == webhookCreate.name
                && this.event == webhookCreate.event
                && this.url == webhookCreate.url
                && this.oauthUrl == webhookCreate.oauthUrl
                && this.clientId == webhookCreate.clientId
                && this.clientSecret == webhookCreate.clientSecret
                && this.fetchTags == webhookCreate.fetchTags;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (isActive == null ? 0 : System.hashCode(isActive));
        hashCode = (17 * hashCode) + (organizationGuid == null ? 0 : System.hashCode(organizationGuid));
        hashCode = (17 * hashCode) + (groupGuid == null ? 0 : System.hashCode(groupGuid));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (event == null ? 0 : System.hashCode(event));
        hashCode = (17 * hashCode) + (url == null ? 0 : System.hashCode(url));
        hashCode = (17 * hashCode) + (oauthUrl == null ? 0 : System.hashCode(oauthUrl));
        hashCode = (17 * hashCode) + (clientId == null ? 0 : System.hashCode(clientId));
        hashCode = (17 * hashCode) + (clientSecret == null ? 0 : System.hashCode(clientSecret));
        hashCode = (17 * hashCode) + (fetchTags == null ? 0 : System.hashCode(fetchTags));
        return hashCode;
    }
}