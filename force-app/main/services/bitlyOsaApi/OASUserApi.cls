/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASUserApi {
    OASClient client;

    public OASUserApi(OASClient client) {
        this.client = client;
    }

    public OASUserApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Get Platform Limits
     * Fetch all platform limits and counts available for an organization
     * @param path The specific path for which information is requested (optional)
     * @return OASPlatformLimits
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPlatformLimits getPlatformLimits(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('path', (String) params.get('path')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPlatformLimits) client.invoke(
            'GET', '/user/platform_limits', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'bearerAuth' },
            OASPlatformLimits.class
        );
    }
    /**
     * Retrieve a User
     * Returns information for the current authenticated user.
     * @return OASUser
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUser getUser() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUser) client.invoke(
            'GET', '/user', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'bearerAuth' },
            OASUser.class
        );
    }
    /**
     * Update a User
     * Update fields in the user
     * @param oaSUserUpdate  (required)
     * @return OASUser
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUser updateUser(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSUserUpdate'), 'oaSUserUpdate');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUser) client.invoke(
            'PATCH', '/user',
            (OASUserUpdate) params.get('oaSUserUpdate'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            OASUser.class
        );
    }
}