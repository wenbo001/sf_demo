/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASLaunchpadContentImage
 */
public class OASLaunchpadContentImage implements OAS.MappedProperties {
    /**
     * Get launchpadId
     * @return launchpadId
     */
    public String launchpadId { get; set; }

    /**
     * Get buttonId
     * @return buttonId
     */
    public String buttonId { get; set; }

    /**
     * Get sortOrder
     * @return sortOrder
     */
    public Integer sortOrder { get; set; }

    /**
     * Get scheduleStart
     * @return scheduleStart
     */
    public String scheduleStart { get; set; }

    /**
     * Get scheduleEnd
     * @return scheduleEnd
     */
    public String scheduleEnd { get; set; }

    /**
     * Get isActive
     * @return isActive
     */
    public Boolean isActive { get; set; }

    /**
     * Get isPinned
     * @return isPinned
     */
    public Boolean isPinned { get; set; }

    /**
     * Get type
     * @return type
     */
    public OASLaunchpadButtonTypeEnum type { get; set; }

    /**
     * Get parent
     * @return parent
     */
    public String parent { get; set; }

    /**
     * Get isSample
     * @return isSample
     */
    public Boolean isSample { get; set; }

    /**
     * Get content
     * @return content
     */
    public OASLaunchpadImageContentData content { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'launchpad_id' => 'launchpadId',
        'button_id' => 'buttonId',
        'sort_order' => 'sortOrder',
        'schedule_start' => 'scheduleStart',
        'schedule_end' => 'scheduleEnd',
        'is_active' => 'isActive',
        'is_pinned' => 'isPinned',
        'is_sample' => 'isSample'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }



    public static OASLaunchpadContentImage getExample() {
        OASLaunchpadContentImage launchpadContentImage = new OASLaunchpadContentImage();
          launchpadContentImage.launchpadId = 'M1234567890';
          launchpadContentImage.buttonId = 'L1234567890';
          launchpadContentImage.sortOrder = 0;
          launchpadContentImage.scheduleStart = '';
          launchpadContentImage.scheduleEnd = '';
          launchpadContentImage.isActive = true;
          launchpadContentImage.isPinned = true;
          launchpadContentImage.type = OASLaunchpadButtonTypeEnum.BITLINK;
          launchpadContentImage.parent = '';
          launchpadContentImage.isSample = true;
          launchpadContentImage.content = null;
        return launchpadContentImage;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASLaunchpadContentImage) {           
            OASLaunchpadContentImage launchpadContentImage = (OASLaunchpadContentImage) obj;
            return this.launchpadId == launchpadContentImage.launchpadId
                && this.buttonId == launchpadContentImage.buttonId
                && this.sortOrder == launchpadContentImage.sortOrder
                && this.scheduleStart == launchpadContentImage.scheduleStart
                && this.scheduleEnd == launchpadContentImage.scheduleEnd
                && this.isActive == launchpadContentImage.isActive
                && this.isPinned == launchpadContentImage.isPinned
                && this.type == launchpadContentImage.type
                && this.parent == launchpadContentImage.parent
                && this.isSample == launchpadContentImage.isSample
                && this.content == launchpadContentImage.content;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (launchpadId == null ? 0 : System.hashCode(launchpadId));
        hashCode = (17 * hashCode) + (buttonId == null ? 0 : System.hashCode(buttonId));
        hashCode = (17 * hashCode) + (sortOrder == null ? 0 : System.hashCode(sortOrder));
        hashCode = (17 * hashCode) + (scheduleStart == null ? 0 : System.hashCode(scheduleStart));
        hashCode = (17 * hashCode) + (scheduleEnd == null ? 0 : System.hashCode(scheduleEnd));
        hashCode = (17 * hashCode) + (isActive == null ? 0 : System.hashCode(isActive));
        hashCode = (17 * hashCode) + (isPinned == null ? 0 : System.hashCode(isPinned));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (parent == null ? 0 : System.hashCode(parent));
        hashCode = (17 * hashCode) + (isSample == null ? 0 : System.hashCode(isSample));
        hashCode = (17 * hashCode) + (content == null ? 0 : System.hashCode(content));
        return hashCode;
    }
}