/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * An object representing all three corners of the QR code. The corners corresponding to each property are: corner_1 &#x3D; top left, corner_2 &#x3D; top right, and corner_3 &#x3D; bottom right
 */
public class OASQRCodeCorners implements OAS.MappedProperties {
    /**
     * Get corner1
     * @return corner1
     */
    public OASQRCodeCorner corner1 { get; set; }

    /**
     * Get corner2
     * @return corner2
     */
    public OASQRCodeCorner corner2 { get; set; }

    /**
     * Get corner3
     * @return corner3
     */
    public OASQRCodeCorner corner3 { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'corner_1' => 'corner1',
        'corner_2' => 'corner2',
        'corner_3' => 'corner3'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }


    public static OASQRCodeCorners getExample() {
        OASQRCodeCorners qrCodeCorners = new OASQRCodeCorners();
          qrCodeCorners.corner1 = OASQRCodeCorner.getExample();
          qrCodeCorners.corner2 = OASQRCodeCorner.getExample();
          qrCodeCorners.corner3 = OASQRCodeCorner.getExample();
        return qrCodeCorners;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASQRCodeCorners) {           
            OASQRCodeCorners qrCodeCorners = (OASQRCodeCorners) obj;
            return this.corner1 == qrCodeCorners.corner1
                && this.corner2 == qrCodeCorners.corner2
                && this.corner3 == qrCodeCorners.corner3;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (corner1 == null ? 0 : System.hashCode(corner1));
        hashCode = (17 * hashCode) + (corner2 == null ? 0 : System.hashCode(corner2));
        hashCode = (17 * hashCode) + (corner3 == null ? 0 : System.hashCode(corner3));
        return hashCode;
    }
}