/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASPaymentInvoice
 */
public class OASPaymentInvoice implements OAS.MappedProperties {
    /**
     * Get invoiceDate
     * @return invoiceDate
     */
    public String invoiceDate { get; set; }

    /**
     * Get invoiceDueDate
     * @return invoiceDueDate
     */
    public String invoiceDueDate { get; set; }

    /**
     * Get invoiceNumber
     * @return invoiceNumber
     */
    public String invoiceNumber { get; set; }

    /**
     * Get invoiceId
     * @return invoiceId
     */
    public String invoiceId { get; set; }

    /**
     * Get charges
     * @return charges
     */
    public OASCharges charges { get; set; }

    /**
     * Get subtotal
     * @return subtotal
     */
    public Double subtotal { get; set; }

    /**
     * Get totalTax
     * @return totalTax
     */
    public Double totalTax { get; set; }

    /**
     * Get total
     * @return total
     */
    public Double total { get; set; }

    /**
     * Get payments
     * @return payments
     */
    public List<OASPayments> payments { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'invoice_date' => 'invoiceDate',
        'invoice_due_date' => 'invoiceDueDate',
        'invoice_number' => 'invoiceNumber',
        'invoice_id' => 'invoiceId',
        'total_tax' => 'totalTax'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }



    public OASPaymentInvoice() {
        payments = new List<OASPayments>();
    }

    public static OASPaymentInvoice getExample() {
        OASPaymentInvoice paymentInvoice = new OASPaymentInvoice();
          paymentInvoice.invoiceDate = '';
          paymentInvoice.invoiceDueDate = '';
          paymentInvoice.invoiceNumber = '';
          paymentInvoice.invoiceId = '';
          paymentInvoice.charges = null;
          paymentInvoice.subtotal = 1.3579;
          paymentInvoice.totalTax = 1.3579;
          paymentInvoice.total = 1.3579;
          paymentInvoice.payments = new List<OASPayments>{OASPayments.getExample()};
          paymentInvoice.description = '';
        return paymentInvoice;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPaymentInvoice) {           
            OASPaymentInvoice paymentInvoice = (OASPaymentInvoice) obj;
            return this.invoiceDate == paymentInvoice.invoiceDate
                && this.invoiceDueDate == paymentInvoice.invoiceDueDate
                && this.invoiceNumber == paymentInvoice.invoiceNumber
                && this.invoiceId == paymentInvoice.invoiceId
                && this.charges == paymentInvoice.charges
                && this.subtotal == paymentInvoice.subtotal
                && this.totalTax == paymentInvoice.totalTax
                && this.total == paymentInvoice.total
                && this.payments == paymentInvoice.payments
                && this.description == paymentInvoice.description;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (invoiceDate == null ? 0 : System.hashCode(invoiceDate));
        hashCode = (17 * hashCode) + (invoiceDueDate == null ? 0 : System.hashCode(invoiceDueDate));
        hashCode = (17 * hashCode) + (invoiceNumber == null ? 0 : System.hashCode(invoiceNumber));
        hashCode = (17 * hashCode) + (invoiceId == null ? 0 : System.hashCode(invoiceId));
        hashCode = (17 * hashCode) + (charges == null ? 0 : System.hashCode(charges));
        hashCode = (17 * hashCode) + (subtotal == null ? 0 : System.hashCode(subtotal));
        hashCode = (17 * hashCode) + (totalTax == null ? 0 : System.hashCode(totalTax));
        hashCode = (17 * hashCode) + (total == null ? 0 : System.hashCode(total));
        hashCode = (17 * hashCode) + (payments == null ? 0 : System.hashCode(payments));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        return hashCode;
    }
}