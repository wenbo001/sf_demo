/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASFeatureUsage
 */
public class OASFeatureUsage implements OAS.MappedProperties {
    /**
     * an array of all of the organizations consumable features
     * @return consumableFeatures
     */
    public List<OASConsumableFeatureFull> consumableFeatures { get; set; }

    /**
     * an array of all of the organizations access features
     * @return accessFeatures
     */
    public List<OASAccessFeature> accessFeatures { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'consumable_features' => 'consumableFeatures',
        'access_features' => 'accessFeatures'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }


    public OASFeatureUsage() {
        consumableFeatures = new List<OASConsumableFeatureFull>();
        accessFeatures = new List<OASAccessFeature>();
    }

    public static OASFeatureUsage getExample() {
        OASFeatureUsage featureUsage = new OASFeatureUsage();
          featureUsage.consumableFeatures = new List<OASConsumableFeatureFull>{OASConsumableFeatureFull.getExample()};
          featureUsage.accessFeatures = new List<OASAccessFeature>{OASAccessFeature.getExample()};
        return featureUsage;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFeatureUsage) {           
            OASFeatureUsage featureUsage = (OASFeatureUsage) obj;
            return this.consumableFeatures == featureUsage.consumableFeatures
                && this.accessFeatures == featureUsage.accessFeatures;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (consumableFeatures == null ? 0 : System.hashCode(consumableFeatures));
        hashCode = (17 * hashCode) + (accessFeatures == null ? 0 : System.hashCode(accessFeatures));
        return hashCode;
    }
}