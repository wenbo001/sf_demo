/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASConsumableFeatureFull
 */
public class OASConsumableFeatureFull implements OAS.MappedProperties {
    /**
     * ISO_TIMESTAMP
     * @return created
     */
    public String created { get; set; }

    /**
     * ISO_TIMESTAMP
     * @return modified
     */
    public String modified { get; set; }

    /**
     * Get id
     * @return id
     */
    public String id { get; set; }

    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get r_limit
     * @return r_limit
     */
    public Integer r_limit { get; set; }

    /**
     * Get isTierDefault
     * @return isTierDefault
     */
    public Boolean isTierDefault { get; set; }

    /**
     * Get isEnforced
     * @return isEnforced
     */
    public Boolean isEnforced { get; set; }

    /**
     * Get isLimited
     * @return isLimited
     */
    public Boolean isLimited { get; set; }

    /**
     * Get count
     * @return count
     */
    public Integer count { get; set; }

    /**
     * Get addOnUsage
     * @return addOnUsage
     */
    public OASAddOnUsage addOnUsage { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'limit' => 'r_limit',
        'is_tier_default' => 'isTierDefault',
        'is_enforced' => 'isEnforced',
        'is_limited' => 'isLimited',
        'add_on_usage' => 'addOnUsage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }


    public static OASConsumableFeatureFull getExample() {
        OASConsumableFeatureFull consumableFeatureFull = new OASConsumableFeatureFull();
          consumableFeatureFull.created = '';
          consumableFeatureFull.modified = '';
          consumableFeatureFull.id = '';
          consumableFeatureFull.name = '';
          consumableFeatureFull.r_limit = 0;
          consumableFeatureFull.isTierDefault = true;
          consumableFeatureFull.isEnforced = true;
          consumableFeatureFull.isLimited = true;
          consumableFeatureFull.count = 0;
          consumableFeatureFull.addOnUsage = null;
        return consumableFeatureFull;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASConsumableFeatureFull) {           
            OASConsumableFeatureFull consumableFeatureFull = (OASConsumableFeatureFull) obj;
            return this.created == consumableFeatureFull.created
                && this.modified == consumableFeatureFull.modified
                && this.id == consumableFeatureFull.id
                && this.name == consumableFeatureFull.name
                && this.r_limit == consumableFeatureFull.r_limit
                && this.isTierDefault == consumableFeatureFull.isTierDefault
                && this.isEnforced == consumableFeatureFull.isEnforced
                && this.isLimited == consumableFeatureFull.isLimited
                && this.count == consumableFeatureFull.count
                && this.addOnUsage == consumableFeatureFull.addOnUsage;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (created == null ? 0 : System.hashCode(created));
        hashCode = (17 * hashCode) + (modified == null ? 0 : System.hashCode(modified));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (r_limit == null ? 0 : System.hashCode(r_limit));
        hashCode = (17 * hashCode) + (isTierDefault == null ? 0 : System.hashCode(isTierDefault));
        hashCode = (17 * hashCode) + (isEnforced == null ? 0 : System.hashCode(isEnforced));
        hashCode = (17 * hashCode) + (isLimited == null ? 0 : System.hashCode(isLimited));
        hashCode = (17 * hashCode) + (count == null ? 0 : System.hashCode(count));
        hashCode = (17 * hashCode) + (addOnUsage == null ? 0 : System.hashCode(addOnUsage));
        return hashCode;
    }
}