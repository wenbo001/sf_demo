/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASLaunchpadLinkPerformance
 */
public class OASLaunchpadLinkPerformance implements OAS.MappedProperties {
    /**
     * Get total
     * @return total
     */
    public Integer total { get; set; }

    /**
     * Get linkClicks
     * @return linkClicks
     */
    public List<OASLaunchpadClicks> linkClicks { get; set; }

    /**
     * Get performanceStart
     * @return performanceStart
     */
    public String performanceStart { get; set; }

    /**
     * Get performanceEnd
     * @return performanceEnd
     */
    public String performanceEnd { get; set; }

    /**
     * Get units
     * @return units
     */
    public Integer units { get; set; }

    /**
     * Gets or Sets unit
     */
    public enum UnitEnum {
        MINUTE,
        HOUR,
        DAY,
        WEEK,
        MONTH
    }

    /**
     * Get unit
     * @return unit
     */
    public UnitEnum unit { get; set; }

    /**
     * Get unitReference
     * @return unitReference
     */
    public String unitReference { get; set; }

    /**
     * Get page
     * @return page
     */
    public OASLaunchpadsPagination page { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'link_clicks' => 'linkClicks',
        'performance_start' => 'performanceStart',
        'performance_end' => 'performanceEnd',
        'unit_reference' => 'unitReference'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }


    public OASLaunchpadLinkPerformance() {
        linkClicks = new List<OASLaunchpadClicks>();
    }

    public static OASLaunchpadLinkPerformance getExample() {
        OASLaunchpadLinkPerformance launchpadLinkPerformance = new OASLaunchpadLinkPerformance();
          launchpadLinkPerformance.total = 0;
          launchpadLinkPerformance.linkClicks = new List<OASLaunchpadClicks>{OASLaunchpadClicks.getExample()};
          launchpadLinkPerformance.performanceStart = '';
          launchpadLinkPerformance.performanceEnd = '';
          launchpadLinkPerformance.units = 0;
          launchpadLinkPerformance.unit = UnitEnum.MINUTE;
          launchpadLinkPerformance.unitReference = '';
          launchpadLinkPerformance.page = OASLaunchpadsPagination.getExample();
        return launchpadLinkPerformance;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASLaunchpadLinkPerformance) {           
            OASLaunchpadLinkPerformance launchpadLinkPerformance = (OASLaunchpadLinkPerformance) obj;
            return this.total == launchpadLinkPerformance.total
                && this.linkClicks == launchpadLinkPerformance.linkClicks
                && this.performanceStart == launchpadLinkPerformance.performanceStart
                && this.performanceEnd == launchpadLinkPerformance.performanceEnd
                && this.units == launchpadLinkPerformance.units
                && this.unit == launchpadLinkPerformance.unit
                && this.unitReference == launchpadLinkPerformance.unitReference
                && this.page == launchpadLinkPerformance.page;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (total == null ? 0 : System.hashCode(total));
        hashCode = (17 * hashCode) + (linkClicks == null ? 0 : System.hashCode(linkClicks));
        hashCode = (17 * hashCode) + (performanceStart == null ? 0 : System.hashCode(performanceStart));
        hashCode = (17 * hashCode) + (performanceEnd == null ? 0 : System.hashCode(performanceEnd));
        hashCode = (17 * hashCode) + (units == null ? 0 : System.hashCode(units));
        hashCode = (17 * hashCode) + (unit == null ? 0 : System.hashCode(unit));
        hashCode = (17 * hashCode) + (unitReference == null ? 0 : System.hashCode(unitReference));
        hashCode = (17 * hashCode) + (page == null ? 0 : System.hashCode(page));
        return hashCode;
    }
}