/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASOrgDomainStatus
 */
public class OASOrgDomainStatus implements OAS.MappedProperties {
    /**
     * Get domain
     * @return domain
     */
    public String domain { get; set; }

    /**
     * Get isActive
     * @return isActive
     */
    public Boolean isActive { get; set; }

    /**
     * Get isVerified
     * @return isVerified
     */
    public Boolean isVerified { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'is_active' => 'isActive',
        'is_verified' => 'isVerified'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }


    public static OASOrgDomainStatus getExample() {
        OASOrgDomainStatus orgDomainStatus = new OASOrgDomainStatus();
          orgDomainStatus.domain = '';
          orgDomainStatus.isActive = true;
          orgDomainStatus.isVerified = true;
        return orgDomainStatus;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrgDomainStatus) {           
            OASOrgDomainStatus orgDomainStatus = (OASOrgDomainStatus) obj;
            return this.domain == orgDomainStatus.domain
                && this.isActive == orgDomainStatus.isActive
                && this.isVerified == orgDomainStatus.isVerified;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (domain == null ? 0 : System.hashCode(domain));
        hashCode = (17 * hashCode) + (isActive == null ? 0 : System.hashCode(isActive));
        hashCode = (17 * hashCode) + (isVerified == null ? 0 : System.hashCode(isVerified));
        return hashCode;
    }
}