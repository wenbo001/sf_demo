/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASQRCodeLogo
 */
public class OASQRCodeLogo implements OAS.MappedProperties {
    /**
     * A GUID for an image uploaded to Bitly
     * @return imageGuid
     */
    public String imageGuid { get; set; }

    /**
     * The type of crop, either rectangular or circular, to be used on the logo
     */
    public enum CropTypeEnum {
        RECTANGLE,
        CIRCLE
    }

    /**
     * The type of crop, either rectangular or circular, to be used on the logo
     * @return cropType
     */
    public CropTypeEnum cropType { get; set; }

    /**
     * Get crop
     * @return crop
     */
    public OASQRCodeLogoCrop crop { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'image_guid' => 'imageGuid',
        'crop_type' => 'cropType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }

    public OASQRCodeLogo() {
        cropType = CropTypeEnum.RECTANGLE;
    }

    public static OASQRCodeLogo getExample() {
        OASQRCodeLogo qrCodeLogo = new OASQRCodeLogo();
          qrCodeLogo.imageGuid = '';
          qrCodeLogo.cropType = CropTypeEnum.RECTANGLE;
          qrCodeLogo.crop = OASQRCodeLogoCrop.getExample();
        return qrCodeLogo;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASQRCodeLogo) {           
            OASQRCodeLogo qrCodeLogo = (OASQRCodeLogo) obj;
            return this.imageGuid == qrCodeLogo.imageGuid
                && this.cropType == qrCodeLogo.cropType
                && this.crop == qrCodeLogo.crop;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (imageGuid == null ? 0 : System.hashCode(imageGuid));
        hashCode = (17 * hashCode) + (cropType == null ? 0 : System.hashCode(cropType));
        hashCode = (17 * hashCode) + (crop == null ? 0 : System.hashCode(crop));
        return hashCode;
    }
}