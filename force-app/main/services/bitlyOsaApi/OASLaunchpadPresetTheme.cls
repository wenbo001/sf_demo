/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASLaunchpadPresetTheme
 */
public class OASLaunchpadPresetTheme implements OAS.MappedProperties {
    /**
     * Get themeId
     * @return themeId
     */
    public Integer themeId { get; set; }

    /**
     * Get displayName
     * @return displayName
     */
    public String displayName { get; set; }

    /**
     * Get background
     * @return background
     */
    public String background { get; set; }

    /**
     * Get launchpadTextColor
     * @return launchpadTextColor
     */
    public String launchpadTextColor { get; set; }

    /**
     * Get descriptionColor
     * @return descriptionColor
     */
    public String descriptionColor { get; set; }

    /**
     * Get avatarBackground
     * @return avatarBackground
     */
    public String avatarBackground { get; set; }

    /**
     * Get buttonTextColor
     * @return buttonTextColor
     */
    public String buttonTextColor { get; set; }

    /**
     * Get buttonBackground
     * @return buttonBackground
     */
    public String buttonBackground { get; set; }

    /**
     * Get isActive
     * @return isActive
     */
    public Boolean isActive { get; set; }

    /**
     * Get layout
     * @return layout
     */
    public String layout { get; set; }

    /**
     * Get iconGradient
     * @return iconGradient
     */
    public String iconGradient { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'theme_id' => 'themeId',
        'display_name' => 'displayName',
        'launchpad_text_color' => 'launchpadTextColor',
        'description_color' => 'descriptionColor',
        'avatar_background' => 'avatarBackground',
        'button_text_color' => 'buttonTextColor',
        'button_background' => 'buttonBackground',
        'is_active' => 'isActive',
        'icon_gradient' => 'iconGradient'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }


    public static OASLaunchpadPresetTheme getExample() {
        OASLaunchpadPresetTheme launchpadPresetTheme = new OASLaunchpadPresetTheme();
          launchpadPresetTheme.themeId = 123;
          launchpadPresetTheme.displayName = 'Sky';
          launchpadPresetTheme.background = '#FFFFFF';
          launchpadPresetTheme.launchpadTextColor = '#000000';
          launchpadPresetTheme.descriptionColor = '#000000';
          launchpadPresetTheme.avatarBackground = '#FFFFFF';
          launchpadPresetTheme.buttonTextColor = '#FFFFFF';
          launchpadPresetTheme.buttonBackground = '#000000';
          launchpadPresetTheme.isActive = true;
          launchpadPresetTheme.layout = '';
          launchpadPresetTheme.iconGradient = '#525457-#232526';
        return launchpadPresetTheme;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASLaunchpadPresetTheme) {           
            OASLaunchpadPresetTheme launchpadPresetTheme = (OASLaunchpadPresetTheme) obj;
            return this.themeId == launchpadPresetTheme.themeId
                && this.displayName == launchpadPresetTheme.displayName
                && this.background == launchpadPresetTheme.background
                && this.launchpadTextColor == launchpadPresetTheme.launchpadTextColor
                && this.descriptionColor == launchpadPresetTheme.descriptionColor
                && this.avatarBackground == launchpadPresetTheme.avatarBackground
                && this.buttonTextColor == launchpadPresetTheme.buttonTextColor
                && this.buttonBackground == launchpadPresetTheme.buttonBackground
                && this.isActive == launchpadPresetTheme.isActive
                && this.layout == launchpadPresetTheme.layout
                && this.iconGradient == launchpadPresetTheme.iconGradient;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (themeId == null ? 0 : System.hashCode(themeId));
        hashCode = (17 * hashCode) + (displayName == null ? 0 : System.hashCode(displayName));
        hashCode = (17 * hashCode) + (background == null ? 0 : System.hashCode(background));
        hashCode = (17 * hashCode) + (launchpadTextColor == null ? 0 : System.hashCode(launchpadTextColor));
        hashCode = (17 * hashCode) + (descriptionColor == null ? 0 : System.hashCode(descriptionColor));
        hashCode = (17 * hashCode) + (avatarBackground == null ? 0 : System.hashCode(avatarBackground));
        hashCode = (17 * hashCode) + (buttonTextColor == null ? 0 : System.hashCode(buttonTextColor));
        hashCode = (17 * hashCode) + (buttonBackground == null ? 0 : System.hashCode(buttonBackground));
        hashCode = (17 * hashCode) + (isActive == null ? 0 : System.hashCode(isActive));
        hashCode = (17 * hashCode) + (layout == null ? 0 : System.hashCode(layout));
        hashCode = (17 * hashCode) + (iconGradient == null ? 0 : System.hashCode(iconGradient));
        return hashCode;
    }
}