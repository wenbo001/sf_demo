/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASModuleSettings
 */
public class OASModuleSettings implements OAS.MappedProperties {
    /**
     * Get allowEdits
     * @return allowEdits
     */
    public Boolean allowEdits { get; set; }

    /**
     * Get visualization
     * @return visualization
     */
    public OASChartVisualization visualization { get; set; }

    /**
     * Gets or Sets chartType
     */
    public enum ChartTypeEnum {
        DEVICES,
        REFERRERS,
        ENGAGEMENTS,
        COMPARISON,
        PERFORMANCE_OVER_TIME,
        TOP_PERFORMING,
        LOCATION
    }

    /**
     * Get chartType
     * @return chartType
     */
    public ChartTypeEnum chartType { get; set; }

    /**
     * Gets or Sets metricTypeSelection
     */
    public enum MetricTypeSelectionEnum {
        VIEWS,
        BUTTON_CLICKS,
        PAGE_VIEWS
    }

    /**
     * Get metricTypeSelection
     * @return metricTypeSelection
     */
    public MetricTypeSelectionEnum metricTypeSelection { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'allow_edits' => 'allowEdits',
        'chart_type' => 'chartType',
        'metric_type_selection' => 'metricTypeSelection'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
   }



    public static OASModuleSettings getExample() {
        OASModuleSettings moduleSettings = new OASModuleSettings();
          moduleSettings.allowEdits = true;
          moduleSettings.visualization = OASChartVisualization.getExample();
          moduleSettings.chartType = ChartTypeEnum.DEVICES;
          moduleSettings.metricTypeSelection = MetricTypeSelectionEnum.PAGE_VIEWS;
        return moduleSettings;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASModuleSettings) {           
            OASModuleSettings moduleSettings = (OASModuleSettings) obj;
            return this.allowEdits == moduleSettings.allowEdits
                && this.visualization == moduleSettings.visualization
                && this.chartType == moduleSettings.chartType
                && this.metricTypeSelection == moduleSettings.metricTypeSelection;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (allowEdits == null ? 0 : System.hashCode(allowEdits));
        hashCode = (17 * hashCode) + (visualization == null ? 0 : System.hashCode(visualization));
        hashCode = (17 * hashCode) + (chartType == null ? 0 : System.hashCode(chartType));
        hashCode = (17 * hashCode) + (metricTypeSelection == null ? 0 : System.hashCode(metricTypeSelection));
        return hashCode;
    }
}